@{
    Layout = "~/Areas/Admin/Views/Shared/Layout/_LayoutAdmin.cshtml";
}
@using Hrmanagement.Core.DTO.DtoOutput;
@{
    var getLeaves = ViewData["leaveData"] as LeaveOutput;
    var userId = getLeaves?.UserId;
    var remark = getLeaves?.IsRejected;
}
<section class="content">

    <div class="modal fade" id="rejectModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Remark</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <textarea class="textarea" id="rejectRemark" name="Remark" rows="4" cols="50" required style="width:100%;">
                        </textarea>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" id="modalCloseBtn">Close</button>
                    <button type="button" class="btn btn-primary" id="modalSubmitBtn">Save changes</button>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
       @* <div>
            <a class="btn btn-primary" style="margin-left:16px;" href="~/Admin/Leave/LeaveUserById/@userId">Back</a>
        </div>*@
        <div class="col-xs-12">
            <div class="box">
                <div class="box-header">
                    <h3 class="box-title">Leave List</h3>
                </div>
                <div class="box-body">
                    <table id="example1" class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>Title</th>
                                <th>Message</th>
                                @if (remark == true)
                                {
                                    <th>Remark</th>
                                }
                                <th>Action</th>

                            </tr>
                        </thead>
                        <tbody>


                        <td>@getLeaves.Title</td>
                        <td>@getLeaves.Message</td>
                            @if (remark == true)
                            {
                            <td>@getLeaves.Remark</td>

                            }

                        <td>
                            <form method="post" action="" onsubmit="return false">
                                <select id="myDropdown" onchange="updateLeaveStatus(@getLeaves.Id,this.value)">
                                        @if (!getLeaves.IsLeaveApproved && !getLeaves.IsRejected)
                                        {
                                        <option value="" selected="true">Select</option>

                                        }
                                    <option value="approve" selected="@(getLeaves.IsLeaveApproved ? true:false)">Approve</option>
                                    <option value="reject" selected="@(getLeaves.IsRejected ? true:false)">Rejecte</option>
                                </select>
                            </form>
                        </td>

                    </table>
                </div>
            </div>
        </div>
    </div>
</section>

<script>

    async function updateLeaveStatus(Id, value) {
        console.log(Id);
        let isApproved = false;
        let isRejected = false;
        let remark = "Null";
        if (value == "approve")
            isApproved = true;
        else {
            var res = await openPopupBox();
            if (!res)
                return;
            else {
                remark = document.getElementById('rejectRemark').value;
                isRejected = true;
            }
        }
        let payload = {
            IsApproved: isApproved,
            IsRejected: isRejected,
            Remark: remark,
            Id: Id
        }
        submitLeaveStatusForm(payload);
    }

    function openPopupBox(value) {
        return new Promise((resolve, reject) => {
            $('#rejectModal').modal('show');
            document.getElementById('modalCloseBtn').addEventListener("click", function () {
                $('#rejectModal').modal('hide');
                reject(false);
            });
            document.getElementById('modalSubmitBtn').addEventListener("click", function () {
                $('#rejectModal').modal('hide');
                resolve(true);
            });
        });
    }

    function submitLeaveStatusForm(payload) {
        console.log(payload);
        var queryString = $.param(payload);
        $.ajax(
            {
                //url: "/../Admin/Leave/updateLeavestatus/Id",
                url: "/Admin/Leave/updateLeavestatus?" + queryString,
                type: "post",
                // data: payload,
                success: function (response) {
                    console.log(response);
                    toastr.success('Leave Status Change successful');
                    setTimeout(function () {
                        location.reload();
                    }, 1000);
                },
            }
        );
    }

</script>



